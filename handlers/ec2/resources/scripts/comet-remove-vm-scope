#!/usr/bin/env python
import logging.handlers
import os
import sys

from comet_common_iface import *

sys.path.append(os.environ['EC2_DIR'] + "/scripts")

try:
    sys.path.append(os.environ['EC2_DIR'] + "/scripts")
    from comet_common_iface import *
except:
    print 'Error in comet-remove-vm-scope: cannot import comet_common_iface.py'
    sys.exit(1)

try:
    # OPEN THE LOG
    LOG.basicConfig(level=LOG.DEBUG, filename='/dev/null')

    if not os.path.exists(os.environ['EC2_LOG_DIR']):
        os.makedirs(os.environ['EC2_LOG_DIR'])

    handler = LOG.handlers.RotatingFileHandler(os.environ['EC2_LOG_DIR'] + '/' + os.environ['EC2_LOG_FILE'],
                                               backupCount=10, maxBytes=50000000)

    if os.environ['EC2_LOG_LEVEL'].lower() == 'debug':
        handler.setLevel(logging.DEBUG)
    elif os.environ['EC2_LOG_LEVEL'].lower() == 'error':
        handler.setLevel(logging.ERROR)
    elif os.environ['EC2_LOG_LEVEL'].lower() == 'info':
        handler.setLevel(logging.INFO)
    else:
        handler.setLevel(logging.INFO)

    formatter = logging.Formatter(
        '%(asctime)s -- comet-remove-vm-scope %(process)d %(levelname)s : %(message)s')
    handler.setFormatter(formatter)

    LOG.getLogger('').addHandler(handler)

    LOG.info('Starting Logger')

except Exception as e:
    print 'Error in comet-remove-vm-scope: Cannot open log file'
    print type(e)
    print e.args
    print e
    sys.exit(1)

# log the environment
for i in os.environ:
    LOG.debug(str(i) + ": " + str(os.environ[i]))

try:
    # DO THE WORK
    LOG.debug("comet-remove-vm-scope: " + str(sys.argv))
    LOG.debug("comet-remove-vm-scope: comethost=" + os.environ['COMETHOST'] + 
              " comet.caCert= " + os.environ['COMETCACERT'] +
              " comet.clientCert= " + os.environ['COMETCLIENTCERT'] +
              " comet.clientKey= " + os.environ['COMETCLIENTKEY'] +
              " sliceId= " + os.environ['SLICE_ID'] + 
              " rId=" + os.environ['R_ID'] +
              " readToken=" + os.environ['UNIT_READ_TOKEN'] + 
              " writeToken=" + os.environ['UNIT_WRITE_TOKEN'])

    comet = CometInterface(os.environ['COMETHOST'], os.environ['COMETCACERT'], os.environ['COMETCLIENTCERT'], os.environ['COMETCLIENTKEY'])
    res = comet.delete_families(os.environ['SLICE_ID'],
                                os.environ['R_ID'],
                                os.environ['UNIT_READ_TOKEN'],
                                os.environ['UNIT_WRITE_TOKEN'])
    if res == True:
        print 'OK'

except Exception as e:
    LOG.error("comet-remove-vm-scope: " + str(type(e)) + " : " + str(e) + "\n")
    sys.exit(1)

sys.exit(0)
