#!/usr/bin/env python

import logging.handlers
import os
import sys

sys.path.append(os.environ['EC2_DIR'] + "/scripts")

from nova_essex_common import *

try:
    sys.path.append(os.environ['EC2_DIR'] + "/scripts")
    from nova_essex_common import *
except:
    print ('Error in nova-essex-stop: cannot import nova_essex_common.py')
    sys.exit(1)

try:
    # OPEN THE LOG
    LOG.basicConfig(level=LOG.DEBUG, filename='/dev/null')

    if not os.path.exists(os.environ['EC2_LOG_DIR']):
        os.makedirs(os.environ['EC2_LOG_DIR'])

    handler = LOG.handlers.RotatingFileHandler(os.environ['EC2_LOG_DIR'] + '/' + os.environ['EC2_LOG_FILE'],
                                               backupCount=10, maxBytes=50000000)

    if os.environ['EC2_LOG_LEVEL'].lower() == 'debug':
        handler.setLevel(logging.DEBUG)
    elif os.environ['EC2_LOG_LEVEL'].lower() == 'error':
        handler.setLevel(logging.ERROR)
    elif os.environ['EC2_LOG_LEVEL'].lower() == 'info':
        handler.setLevel(logging.INFO)
    else:
        handler.setLevel(logging.INFO)

    formatter = logging.Formatter('%(asctime)s - %(process)d - %(levelname)s - %(message)s')
    handler.setFormatter(formatter)

    LOG.getLogger('').addHandler(handler)

    LOG.info('Starting Logger')

except Exception as e:
    print ('Error in nova-essex-stop: Cannot open log file')
    print (type(e))
    print (e.args)
    print (e)
    sys.exit(1)

# log the environment
# for i in os.environ:
#    LOG.debug(str(i) + ": " + str(os.environ[i]) )


try:
    # DO THE WORK
    if len(sys.argv) >= 2:
        LOG.debug("nova-essex-stop: " + str(sys.argv[1]))
        instance_id = str(sys.argv[1])

        VM().stop(instance_id)
        LOG.info("Stopped instance: " + str(instance_id))
    else:
        LOG.error("nova-essex-stop: missing instance argument")
        sys.exit(1)

except Exception as e:
    LOG.error("nova-essex-stop: " + str(type(e)) + " : " + str(e) + "\n" + str(traceback.format_exc()))
    Project().cleanup(os.environ['PROJECT_NAME'], os.environ['USER_NAME'])
    sys.exit(1)

sys.exit(0)
