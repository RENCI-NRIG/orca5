#!/usr/bin/env python                                                                                                                                                                                  
import os
import sys
import logging as LOG
import logging.handlers
import traceback

sys.path.append(os.environ['EC2_DIR'] + "/scripts")

from nova_essex_common import *

try:
    sys.path.append(os.environ['EC2_DIR'] + "/scripts")
    from nova_essex_common import *
except:
    print 'Error in nova-essex-prepare-key: cannot import nova_essex_common.py'
    sys.exit(1)

try:
    # OPEN THE LOG
    LOG.basicConfig(level=LOG.DEBUG, filename='/dev/null')

    if not os.path.exists(os.environ['EC2_LOG_DIR']):
        os.makedirs(os.environ['EC2_LOG_DIR'])

    handler = LOG.handlers.RotatingFileHandler(os.environ['EC2_LOG_DIR'] + '/' + os.environ['EC2_LOG_FILE'],
                                               backupCount=10, maxBytes=50000000)

    if os.environ['EC2_LOG_LEVEL'].lower() == 'debug':
        handler.setLevel(logging.DEBUG)
    elif os.environ['EC2_LOG_LEVEL'].lower() == 'error':
        handler.setLevel(logging.ERROR)
    elif os.environ['EC2_LOG_LEVEL'].lower() == 'info':
        handler.setLevel(logging.INFO)
    else:
        handler.setLevel(logging.INFO)

    formatter = logging.Formatter('%(asctime)s - %(process)d - %(levelname)s - %(message)s')
    handler.setFormatter(formatter)

    LOG.getLogger('').addHandler(handler)

    LOG.info('Starting Logger - nova-essex-prepare-key')

except Exception as e:
    print 'Error in nova-essex-prepare-key: Cannot open log file'
    print type(e)
    print e.args
    print e
    sys.exit(1)

# log the environment
# for i in os.environ:
#    LOG.debug(str(i) + ": " + str(os.environ[i]) )

try:
    # DO THE WORK
    LOG.debug("nova-essex-prepare-key: " + str(sys.argv))

    if len(sys.argv) == 4:

        instance_ip = sys.argv[1].strip("'")
        user_ssh_key = sys.argv[2].strip("'")

        ret = VM.prepare_key(instance_ip, user_ssh_key, os.environ['EUCA_KEY_DIR'] + "/" + os.environ['EC2_SSH_KEY'])

        if ret:
            LOG.info("nova-essex-prepare-key root Success " + str(instance_ip) + ": " + str(user_ssh_key))
        else:
            LOG.info("nova-essex-prepare-key root: Failure " + str(instance_ip) + ": " + str(user_ssh_key))
            sys.exit(2)
    elif len(sys.argv) == 5:
        instance_ip = sys.argv[1].strip("'")
        user_name = sys.argv[2].strip("'")

        user_ssh_keys = sys.argv[3].strip("'").split('\n')
        shouldSudo = sys.argv[4].strip("'")
        LOG.debug("nova-essex-prepare-key: argv = " + str(sys.argv))

        LOG.debug("instance_ip = " + str(instance_ip))
        LOG.debug("user_name = " + str(user_name))
        LOG.debug("user_ssh_keys (" + str(len(user_ssh_keys)) + ") = " + str(user_ssh_keys))
        LOG.debug("shouldSudo = " + str(shouldSudo))

        while user_ssh_keys.count('') > 0:
            user_ssh_keys.remove('')

        for i in user_ssh_keys:
            LOG.debug("user_ssh_keys -- " + str(i))

        ret = VM.prepare_keys(instance_ip, user_name, user_ssh_keys, shouldSudo,
                        os.environ['EUCA_KEY_DIR'] + "/" + os.environ['EC2_SSH_KEY'])
        if ret:
            LOG.info("nova-essex-prepare-key: Success " + str(instance_ip) + ": " + str(user_name))
        else:
            LOG.info("nova-essex-prepare-key: Failure " + str(instance_ip) + ": " + str(user_name))
            sys.exit(2)
    else:
        LOG.error("nova-essex-prepare-key: invalid argv length (" + str(len(sys.argv)) + "), argv = " + str(sys.argv))
        sys.exit(1)

except Exception as e:
    LOG.error("nova-essex-prepare-key: " + str(type(e)) + " : " + str(e) + "\n" + str(traceback.format_exc()))
    sys.exit(1)

sys.exit(0)
