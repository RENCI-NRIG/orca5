package orca.manage;

import java.security.cert.Certificate;
import java.util.List;

import orca.extensions.PackageId;
import orca.extensions.PluginId;
import orca.manage.beans.ActorMng;
import orca.manage.beans.PackageMng;
import orca.manage.beans.PluginMng;
import orca.manage.beans.PropertiesMng;
import orca.manage.beans.PropertyMng;
import orca.manage.beans.ProxyMng;
import orca.manage.beans.SliceMng;
import orca.manage.beans.UnitMng;
import orca.manage.beans.UserMng;
import orca.shirako.common.SliceID;
import orca.util.ID;


public class _ContainerTests {
	public static final ID SITE_GUID = new ID("c48e2cb1-e00e-4ed2-918b-8fe4368c8c02");
	public static final ID BROKER_GUID = new ID("ebeb5bf1-4751-410a-94bf-0075297c162d");
	public static final ID SM_GUID = new ID("46AEA103-1185-4E69-8AFA-53194582F5A9");
	
	private static void doGetCertificate(IOrcaActor actor) {
		Certificate c = actor.getCertificate();
		if (c == null) {
			System.err.println(actor.getLastError());
		}else {
			System.out.println("Certificate: " + c);
		}
	}
	
	private static void doGetSlices(IOrcaActor actor){
		System.out.println("Obtaining slices");
		List<SliceMng> slices = actor.getSlices();
		if (slices == null) {
			System.err.println(actor.getLastError());
		}else {
			for (SliceMng s : slices) {
				System.out.println("Slice name:" + s.getName() + " guid:" + s.getID());
				System.out.println("\tValidating slice");
				SliceMng ss = actor.getSlice(new SliceID(s.getID()));
				if (ss == null) {
					System.err.println(actor.getLastError());
				}else {
					System.out.println("\tSlice name:" + ss.getName() + " guid:" + ss.getID());
				}
			}
		}
	}
	
	public static void main(String[] args){
		IOrcaContainer cont = Orca.connect("soap://http://localhost:8080/orca/spring-services/", "admin", "login");
		Certificate cert = cont.getCertificate();
		if (cert != null){
			System.out.println("Certificate: " + cert);
		} else {
			System.err.println(cont.getLastError());
		}
		
		cert = cont.getCertificate(SITE_GUID);
		if (cert != null){
			System.out.println("Actor certificate: " + cert);
		}else {
			System.err.println(cont.getLastError());
		}
		
		
		List<UserMng> users = cont.getUsers();
		if (users == null){
			System.err.println(cont.getLastError());		
		}else {
			for (UserMng user : users){
				System.out.println("User: first=" + user.getFirst() + " login=" + user.getLogin());
				UserMng u = cont.getUser(user.getLogin());
				if (u == null){
					System.err.println("Could not fetch user: " + cont.getLastError());
				}else {
					System.out.println("Fetched user: first=" + u.getFirst() + " login=" + u.getLogin());
					
				}
			}
		}
		
		System.out.println("Fetching actors");
		List<ActorMng> actors = cont.getActors();
		if (actors == null){
			System.err.println(cont.getLastError());					
		}else {
			for (ActorMng a : actors){
				System.out.println("Actor name:" + a.getName() + " guid:" + a.getID() + " type: " + a.getType());
			}
		}
		
		System.out.println("Fetching actors (from db)");
		actors = cont.getActorsFromDatabase();
		if (actors == null){
			System.err.println(cont.getLastError());					
		}else {
			for (ActorMng a : actors){
				System.out.println("Actor name:" + a.getName() + " guid:" + a.getID() + " type: " + a.getType());
			}
		}
		
		System.out.println("Fetching proxies");
		List<ProxyMng> proxies = cont.getProxies(OrcaConstants.ProtocolLocal);
		if (proxies == null){
			System.err.println(cont.getLastError());
		}else {
			for (ProxyMng p : proxies){
				System.out.println("Proxy name:" + p.getName() + " guid:" + p.getGuid() + " type:" + p.getType());
			}
		}
		
		System.out.println("Fetching broker proxies");
		proxies = cont.getBrokerProxies(OrcaConstants.ProtocolLocal);
		if (proxies == null){
			System.err.println(cont.getLastError());
		}else {
			for (ProxyMng p : proxies){
				System.out.println("Proxy name:" + p.getName() + " guid:" + p.getGuid() + " type:" + p.getType());
			}
		}
		
		System.out.println("Fetching authority proxies");
		proxies = cont.getAuthorityProxies(OrcaConstants.ProtocolLocal);
		if (proxies == null){
			System.err.println(cont.getLastError());
		}else {
			for (ProxyMng p : proxies){
				System.out.println("Proxy name:" + p.getName() + " guid:" + p.getGuid() + " type:" + p.getType());
			}
		}
		
		System.out.println("Fetching installed packages");
		List<PackageMng> packages = cont.getPackages();
		if (packages == null) {
			System.err.println(cont.getLastError());
		}else {
			for (PackageMng p : packages) {
				System.out.println("Package name:" + p.getName() + " guid:" + p.getId() + " desc:" + p.getDescription());
				System.out.println("\t Fetching plugins from package: " + p.getId());
				List<PluginMng> plugins = cont.getPlugins(new PackageId(p.getId()));
				if (plugins == null){
					System.err.println(cont.getLastError());
				}else {
					for (PluginMng plugin : plugins){
						System.out.println("\t Plugin name:" + plugin.getName() + " id:" + plugin.getId() + " desc:" + p.getDescription());
						System.out.println("\t\t Fetching pluign");
						PluginMng tmp = cont.getPlugin(new PackageId(p.getId()), new PluginId(plugin.getId()));
						if (tmp == null){
							System.err.println(cont.getLastError());
						}else {
							System.out.println("\t\t Plugin name:" + tmp.getName() + " id:" + tmp.getId() + " desc:" + tmp.getDescription());							
						}
					}
				}
			}
		}
		
		System.out.println("Fetching inventory");
		List<UnitMng> inventory = cont.getInventory();
		if (inventory == null){
			System.err.println(cont.getLastError());
		}else {
			for (UnitMng u : inventory){
				System.out.println("Unit:");
				PropertiesMng p = u.getProperties();
				for (PropertyMng pp : p.getProperty()) {
					System.out.println("\t" + pp.getName() + "=" + pp.getValue());
				}
			}
		}
		
		System.out.println("Fetching site");
		IOrcaAuthority site = cont.getAuthority(SITE_GUID);
		if (site == null) {
			System.err.println(cont.getLastError());
		}else {
			System.out.println("Site class:" + site.getClass().getName());
			doGetCertificate(site);
			doGetSlices(site);
		}
		
		System.out.println("Fetching broker");
		IOrcaBroker broker = cont.getBroker(BROKER_GUID);
		if (broker == null) {
			System.err.println(cont.getLastError());
		}else {
			System.out.println("Broker class:" + broker.getClass().getName());
			doGetCertificate(broker);
			doGetSlices(broker);
		}
		
		System.out.println("Fetching sm");
		IOrcaServiceManager sm = cont.getServiceManager(SM_GUID);
		if (sm == null) {
			System.err.println(cont.getLastError());
		}else {
			System.out.println("SM class:" + sm.getClass().getName());
			doGetCertificate(sm);
			doGetSlices(sm);
		}
		
		System.out.println("Logging out");
		if (!cont.logout()) {
			System.out.println("Could not log out: " + cont.getLastError());
		}
		
		users = cont.getUsers();
		if (users != null){
			System.err.println("Get users did not fail");
		}else {
			System.out.println("Get users failed (as expected): "+ cont.getLastError());
		}
	}
}