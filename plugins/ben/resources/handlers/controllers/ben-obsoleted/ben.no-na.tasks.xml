<!--
This file contains definitions of tasks used by the ben package
--> 
<target name="ben.load.tasks" depends="load.tasks"> 
    <!--  all network driver task declarations --> 
    <taskdef resource="orca/handlers/network/network.xml" classpathref="run.classpath" loaderref="run.classpath.loader" /> 
    <property resource="orca/handlers/network/network.properties" classpathref="run.classpath" /> 
</target> 
<macrodef name="create.vlan" description="enables the specified vlan"> 
    <attribute name="router" description="router address" /> 
    <attribute name="vlan.tag" description="vlan tag to enable" /> 
    <attribute name="vlan.qos.rate" description="vlan bandwidth, 0 is best-effort" /> 
    <attribute name="vlan.qos.burst.size" description="vlan burst size" /> 
    <attribute name="router.user" description="user name for the router" /> 
    <attribute name="router.password" /> 
    <attribute name="router.admin.password" description="admin password, Cisco6509 only" /> 
    <attribute name="router.type" description="device type: Cisco6509 or ex3200" /> 
    <sequential> 
        <echo message="enabling vlan @{vlan.tag} on router @{router} bw=@{vlan.qos.rate} burst=@{vlan.qos.burst.size}" /> 
        <echo message="router.user: @{router.user}" /> 
        <var name="code" value="0"></var> 
        <if> 
            <equals arg1="${emulation}" arg2="true" /> 
            <then> 
                <echo message="running under emulation...nothing to do" /> 
                <var name="code" value="0"></var> 
            </then> 
            <else> 
                <limit maxwait="${operation.timeout}" failonerror="true"> 
                    <var name="code" unset="true"></var> 
                    <!-- Cisco 6509 --> 
                    <if> 
                        <equals arg1="@{router.type}" arg2="Cisco6509" /> 
                        <then> 
                            <network.router.6509.create.vlan deviceInstance="${network.device.cisco6509}" exitCodeProperty="code" user="@{router.user}" password="@{router.password}" adminPassword="@{router.admin.password}" deviceAddress="@{router}" vlanTag="@{vlan.tag}" vlanQoSBurstSize="@{vlan.qos.burst.size}" vlanQosRate="@{vlan.qos.rate}" /> 
                        </then> 
                    </if> 
                    <!-- EX3200  --> 
                    <if> 
                        <equals arg1="@{router.type}" arg2="ex3200" /> 
                        <then> 
                            <network.router.ex3200.create.vlan deviceInstance="${network.device.ex3200}" exitCodeProperty="code" user="@{router.user}" password="@{router.password}" deviceAddress="@{router}" vlanTag="@{vlan.tag}" vlanQoSBurstSize="@{vlan.qos.burst.size}" vlanQosRate="@{vlan.qos.rate}" /> 
                        </then> 
                    </if> 
                </limit> 
            </else> 
        </if> 
        <if> 
            <equals arg1="0" arg2="${code}" /> 
            <then> 
                <echo message="vlan @{vlan.tag} created successfully on router @{router}" /> 
            </then> 
            <else> 
                <echo message="vlan @{vlan.tag} creation on @{router} failed. code=${code}" /> 
            </else> 
        </if> 
    </sequential> 
</macrodef> 
<macrodef name="delete.vlan" description="disables the specified vlan"> 
    <attribute name="router" description="router address" /> 
    <attribute name="vlan.tag" description="vlan tag to disable" /> 
    <attribute name="vlan.with.qos" description="true if vlan had QoS settings" /> 
    <attribute name="router.user" description="user name for the router" /> 
    <attribute name="router.password" /> 
    <attribute name="router.admin.password" /> 
    <attribute name="router.type" description="Router type Cisco6509 or ex3200" /> 
    <sequential> 
        <echo message="disabling vlan @{vlan.tag} (qos status @{vlan.with.qos}) on router @{router}" /> 
        <var name="code" value="0"></var> 
        <if> 
            <equals arg1="${emulation}" arg2="true" /> 
            <then> 
                <echo message="running under emulation...nothing to do" /> 
                <var name="code" value="0"></var> 
            </then> 
            <else> 
                <limit maxwait="${operation.timeout}" failonerror="true"> 
                    <var name="code" unset="true"></var> 
                    <!-- Cisco 6509 --> 
                    <if> 
                        <equals arg1="@{router.type}" arg2="Cisco6509" /> 
                        <then> 
                            <network.router.6509.delete.vlan deviceInstance="${network.device.cisco6509}" exitCodeProperty="code" user="@{router.user}" password="@{router.password}" adminPassword="@{router.admin.password}" deviceAddress="@{router}" vlanTag="@{vlan.tag}" vlanWithQos="@{vlan.with.qos}" /> 
                        </then> 
                    </if> 
                    <!-- EX3200  --> 
                    <if> 
                        <equals arg1="@{router.type}" arg2="ex3200" /> 
                        <then> 
                            <network.router.ex3200.delete.vlan deviceInstance="${network.device.ex3200}" exitCodeProperty="code" user="@{router.user}" password="@{router.password}" deviceAddress="@{router}" vlanTag="@{vlan.tag}" vlanWithQos="@{vlan.with.qos}" /> 
                        </then> 
                    </if> 
                </limit> 
            </else> 
        </if> 
        <if> 
            <equals arg1="0" arg2="${code}" /> 
            <then> 
                <echo message="vlan @{vlan.tag} deleted successfully on router @{router}" /> 
            </then> 
            <else> 
                <echo message="vlan @{vlan.tag} deletion on @{router} failed. code=${code}" /> 
            </else> 
        </if> 
    </sequential> 
</macrodef> 
<macrodef name="add.trunk.ports" description="add trunk ports to vlan"> 
    <attribute name="router" description="router address" /> 
    <attribute name="vlan.tag" description="vlan tag to disable" /> 
    <attribute name="ports" description="trunk ports to add" /> 
    <attribute name="router.user" description="user name for the router" /> 
    <attribute name="router.password" /> 
    <attribute name="router.admin.password" /> 
    <attribute name="router.type" description="Router type Cisco6509 or ex3200" /> 
    <sequential> 
        <echo message="adding ports @{ports} to vlan @{vlan.tag} on router @{router}" /> 
        <var name="code" value="0"></var> 
        <if> 
            <equals arg1="${emulation}" arg2="true" /> 
            <then> 
                <echo message="running under emulation...nothing to do" /> 
                <var name="code" value="0"></var> 
            </then> 
            <else> 
                <limit maxwait="${operation.timeout}" failonerror="true"> 
                    <var name="code" unset="true"></var> 
                    <!-- Cisco 6509 --> 
                    <if> 
                        <equals arg1="@{router.type}" arg2="Cisco6509" /> 
                        <then> 
                            <network.router.6509.add.trunkPorts deviceInstance="${network.device.cisco6509}" exitCodeProperty="code" user="@{router.user}" password="@{router.password}" adminPassword="@{router.admin.password}" deviceAddress="@{router}" vlanTag="@{vlan.tag}" ports="@{ports}" /> 
                        </then> 
                    </if> 
                    <!-- EX3200  --> 
                    <if> 
                        <equals arg1="@{router.type}" arg2="ex3200" /> 
                        <then> 
                            <network.router.ex3200.add.trunkPorts deviceInstance="${network.device.ex3200}" exitCodeProperty="code" user="@{router.user}" password="@{router.password}" deviceAddress="@{router}" vlanTag="@{vlan.tag}" ports="@{ports}" /> 
                        </then> 
                    </if> 
                </limit> 
            </else> 
        </if> 
        <if> 
            <equals arg1="0" arg2="${code}" /> 
            <then> 
                <echo message="vlan @{vlan.tag} added ports @{ports} on router @{router}" /> 
            </then> 
            <else> 
                <echo message="vlan @{vlan.tag} addition of ports @{ports} on @{router} failed. code=${code}" /> 
            </else> 
        </if> 
    </sequential> 
</macrodef> 
<macrodef name="remove.trunk.ports" description="remove trunk ports to vlan"> 
    <attribute name="router" description="router address" /> 
    <attribute name="vlan.tag" description="vlan tag to disable" /> 
    <attribute name="ports" description="trunk ports to add" /> 
    <attribute name="router.user" description="user name for the router" /> 
    <attribute name="router.password" /> 
    <attribute name="router.admin.password" /> 
    <attribute name="router.type" description="Router type Cisco6509 or ex3200" /> 
    <sequential> 
        <echo message="removing ports @{ports} from vlan @{vlan.tag} on router @{router}" /> 
        <var name="code" value="0"></var> 
        <if> 
            <equals arg1="${emulation}" arg2="true" /> 
            <then> 
                <echo message="running under emulation...nothing to do" /> 
                <var name="code" value="0"></var> 
            </then> 
            <else> 
                <limit maxwait="${operation.timeout}" failonerror="true"> 
                    <var name="code" unset="true"></var> 
                    <!-- Cisco 6509 --> 
                    <if> 
                        <equals arg1="@{router.type}" arg2="Cisco6509" /> 
                        <then> 
                            <network.router.6509.remove.trunkPorts deviceInstance="${network.device.cisco6509}" exitCodeProperty="code" user="@{router.user}" password="@{router.password}" adminPassword="@{router.admin.password}" deviceAddress="@{router}" vlanTag="@{vlan.tag}" ports="@{ports}" /> 
                        </then> 
                    </if> 
                    <!-- EX3200  --> 
                    <if> 
                        <equals arg1="@{router.type}" arg2="ex3200" /> 
                        <then> 
                            <network.router.ex3200.remove.trunkPorts deviceInstance="${network.device.ex3200}" exitCodeProperty="code" user="@{router.user}" password="@{router.password}" deviceAddress="@{router}" vlanTag="@{vlan.tag}" ports="@{ports}" /> 
                        </then> 
                    </if> 
                </limit> 
            </else> 
        </if> 
        <if> 
            <equals arg1="0" arg2="${code}" /> 
            <then> 
                <echo message="vlan @{vlan.tag} removed ports @{ports} on router @{router}" /> 
            </then> 
            <else> 
                <echo message="vlan @{vlan.tag} removal of ports @{ports} on @{router} failed. code=${code}" /> 
            </else> 
        </if> 
    </sequential> 
</macrodef> 
<macrodef name="map.vlans" description="maps the specified vlans"> 
    <attribute name="router" description="router address" /> 
    <attribute name="router.type" description="Cisco6509 or ex3200" /> 
    <attribute name="port" description="port for mapping" /> 
    <attribute name="src.vlan.tag" description="source vlan tag" /> 
    <attribute name="dst.vlan.tag" description="destination vlan tag" /> 
    <attribute name="router.user" description="user name for the router" /> 
    <attribute name="router.password" /> 
    <attribute name="router.admin.password" /> 
    <sequential> 
        <echo message="mapping vlan tags @{src.vlan.tag}:@{dst.vlan.tag} on router @{router}" /> 
        <var name="code" value="0"></var> 
        <if> 
            <equals arg1="${emulation}" arg2="true" /> 
            <then> 
                <echo message="running under emulation...nothing to do" /> 
                <var name="code" value="0"></var> 
            </then> 
            <else> 
                <limit maxwait="${operation.timeout}" failonerror="true"> 
                    <var name="code" unset="true"></var> 
                    <network.router.6509.map.vlans deviceInstance="${network.device.cisco6509}" exitCodeProperty="code" deviceAddress="@{router}" user="@{router.user}" password="@{router.password}" adminPassword="@{router.admin.password}" sourceTag="@{src.vlan.tag}" destinationTag="@{dst.vlan.tag}" port="@{port}" /> 
                </limit> 
            </else> 
        </if> 
        <if> 
            <equals arg1="0" arg2="${code}" /> 
            <then> 
                <echo message="successfully mapped @{src.vlan.tag}:@{dst.vlan.tag} on router @{router}" /> 
            </then> 
            <else> 
                <echo message="failed to map @{src.vlan.tag}:@{dst.vlan.tag} on router @{router}. code=${code}" /> 
            </else> 
        </if> 
    </sequential> 
</macrodef> 
<macrodef name="unmap.vlans" description="unmaps the specified vlans"> 
    <attribute name="router" description="router address" /> 
    <attribute name="router.type" description="Cisco6509 or ex3200" /> 
    <attribute name="src.vlan.tag" description="source vlan tag" /> 
    <attribute name="dst.vlan.tag" description="destination vlan tag" /> 
    <attribute name="port" description="port" /> 
    <attribute name="router.user" description="user name for the router" /> 
    <attribute name="router.password" /> 
    <attribute name="router.admin.password" /> 
    <sequential> 
        <echo message="unmapping vlan tags @{src.vlan.tag}:@{dst.vlan.tag} on router @{router}" /> 
        <var name="code" value="0"></var> 
        <if> 
            <equals arg1="${emulation}" arg2="true" /> 
            <then> 
                <echo message="running under emulation...nothing to do" /> 
                <var name="code" value="0"></var> 
            </then> 
            <else> 
                <limit maxwait="${operation.timeout}" failonerror="true"> 
                    <var name="code" unset="true"></var> 
                    <network.router.6509.unmap.vlans deviceInstance="${network.device.cisco6509}" exitCodeProperty="code" deviceAddress="@{router}" user="@{router.user}" password="@{router.password}" adminPassword="@{router.admin.password}" sourceTag="@{src.vlan.tag}" destinationTag="@{dst.vlan.tag}" port="@{port}" /> 
                </limit> 
            </else> 
        </if> 
        <if> 
            <equals arg1="0" arg2="${code}" /> 
            <then> 
                <echo message="successfully unmapped @{src.vlan.tag}:@{dst.vlan.tag} on router @{router}" /> 
            </then> 
            <else> 
                <echo message="failed to unmap @{src.vlan.tag}:@{dst.vlan.tag} on router @{router}. code=${code}" /> 
            </else> 
        </if> 
    </sequential> 
</macrodef> 
<macrodef name="polatis.connect" description="creates a unidirectional crossconnect on polatis"> 
    <attribute name="polatis" description="polatis address" /> 
    <attribute name="src.port" description="input port" /> 
    <attribute name="dst.port" description="destination port" /> 
    <attribute name="user" description="user name to use" /> 
    <attribute name="password" /> 
    <sequential> 
        <echo message="creating crossconnect on @{polatis}: @{src.port}:@{dst.port}" /> 
        <var name="code" value="0"></var> 
        <if> 
            <equals arg1="${emulation}" arg2="true" /> 
            <then> 
                <echo message="running under emulation...nothing to do" /> 
                <var name="code" value="0"></var> 
            </then> 
            <else> 
                <limit maxwait="${operation.timeout}" failonerror="true"> 
                    <var name="code" unset="true"></var> 
                    <network.os.create.patch deviceInstance="${network.device.polatisos}" exitCodeProperty="code" deviceAddress="@{polatis}" user="@{user}" password="@{password}" inputPort="@{src.port}" outputPort="@{dst.port}" /> 
                </limit> 
            </else> 
        </if> 
        <if> 
            <equals arg1="0" arg2="${code}" /> 
            <then> 
                <echo message="crossconnect @{src.port}:@{dst.port} created successfully on polatis: @{polatis}" /> 
            </then> 
            <else> 
                <echo message="crossconnect @{src.port}:@{dst.port} failed on polatis: @{polatis}" /> 
            </else> 
        </if> 
    </sequential> 
</macrodef> 
<macrodef name="polatis.disconnect" description="idsconnects a unidirectional crossconnect on polatis"> 
    <attribute name="polatis" description="polatis address" /> 
    <attribute name="src.port" description="port" /> 
    <attribute name="user" description="user name to use" /> 
    <attribute name="password" /> 
    <sequential> 
        <echo message="disconnecting crossconnect on @{polatis}: port=@{src.port}" /> 
        <var name="code" value="0"></var> 
        <if> 
            <equals arg1="${emulation}" arg2="true" /> 
            <then> 
                <echo message="running under emulation...nothing to do" /> 
                <var name="code" value="0"></var> 
            </then> 
            <else> 
                <limit maxwait="${operation.timeout}" failonerror="true"> 
                    <var name="code" unset="true"></var> 
                    <network.os.delete.patch deviceInstance="${network.device.polatisos}" exitCodeProperty="code" deviceAddress="@{polatis}" user="@{user}" password="@{password}" port="@{src.port}" /> 
                </limit> 
            </else> 
        </if> 
        <if> 
            <equals arg1="0" arg2="${code}" /> 
            <then> 
                <echo message="port @{src.port} successfully disconnected on polatis: @{polatis}" /> 
            </then> 
            <else> 
                <echo message="port @{src.port} failed to disonnect on polatis: @{polatis}" /> 
            </else> 
        </if> 
    </sequential> 
</macrodef> 
<macrodef name="dtn.connect" description="creates a crossconnect on dtn"> 
    <attribute name="dtn" description="dtn address" /> 
    <attribute name="src.port" description="input port" /> 
    <attribute name="dst.port" description="destination port" /> 
    <attribute name="user" description="user name to use" /> 
    <attribute name="password" /> 
    <attribute name="dtn.payload.type" /> 
    <sequential> 
        <echo message="creating crossconnect on @{dtn}: @{src.port}:@{dst.port}" /> 
        <var name="code" value="0"></var> 
        <if> 
            <equals arg1="${emulation}" arg2="true" /> 
            <then> 
                <echo message="running under emulation...nothing to do" /> 
                <var name="code" value="0"></var> 
            </then> 
            <else> 
                <limit maxwait="${operation.timeout}" failonerror="true"> 
                    <var name="code" unset="true"></var> 
                    <network.dtn.create.crs deviceInstance="${network.device.infineradtn}" exitCodeProperty="code" deviceAddress="@{dtn}" user="@{user}" password="@{password}" srcPort="@{src.port}" dstPort="@{dst.port}" payloadType="@{dtn.payload.type}" /> 
                </limit> 
            </else> 
        </if> 
        <if> 
            <equals arg1="0" arg2="${code}" /> 
            <then> 
                <echo message="crossconnect @{src.port}:@{dst.port} created successfully on DTN: @{dtn}" /> 
            </then> 
            <else> 
                <echo message="crossconnect @{src.port}:@{dst.port} failed on DTN: @{dtn}" /> 
            </else> 
        </if> 
    </sequential> 
</macrodef> 
<macrodef name="dtn.disconnect" description="disconnects a previously created crossconnect on dtn"> 
    <attribute name="dtn" description="dtn address" /> 
    <attribute name="src.port" description="input port" /> 
    <attribute name="dst.port" description="destination port" /> 
    <attribute name="user" description="user name to use" /> 
    <attribute name="password" /> 
    <attribute name="dtn.payload.type" /> 
    <sequential> 
        <echo message="destroying crossconnect on @{dtn}: @{src.port}:@{dst.port}" /> 
        <var name="code" value="0"></var> 
        <if> 
            <equals arg1="${emulation}" arg2="true" /> 
            <then> 
                <echo message="running under emulation...nothing to do" /> 
                <var name="code" value="0"></var> 
            </then> 
            <else> 
                <limit maxwait="${operation.timeout}" failonerror="true"> 
                    <var name="code" unset="true"></var> 
                    <network.dtn.delete.crs deviceInstance="${network.device.infineradtn}" exitCodeProperty="code" deviceAddress="@{dtn}" user="@{user}" password="@{password}" srcPort="@{src.port}" dstPort="@{dst.port}" /> 
                </limit> 
            </else> 
        </if> 
        <if> 
            <equals arg1="0" arg2="${code}" /> 
            <then> 
                <echo message="crossconnect @{src.port}:@{dst.port} deleted successfully on DTN: @{dtn}" /> 
            </then> 
            <else> 
                <echo message="deleting crossconnect @{src.port}:@{dst.port} failed on DTN: @{dtn}" /> 
            </else> 
        </if> 
    </sequential> 
</macrodef>