//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0.2-b01-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.04.08 at 05:33:55 PM AST 
//


package net.exogeni.orca.boot.beans;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the orca.boot.beans package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: orca.boot.beans
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Locations }
     * @return Locations
     */
    public Locations createLocations() {
        return new Locations();
    }

    /**
     * Create an instance of {@link Attributes }
     * @return Attributes
     */
    public Attributes createAttributes() {
        return new Attributes();
    }

    /**
     * Create an instance of {@link Policy }
     * @return Policy
     */
    public Policy createPolicy() {
        return new Policy();
    }

    /**
     * Create an instance of {@link Slice }
     * @return Slice
     */
    public Slice createSlice() {
        return new Slice();
    }

    /**
     * Create an instance of {@link Rdata }
     * @return Rdata
     */
    public Rdata createRdata() {
        return new Rdata();
    }

    /**
     * Create an instance of {@link Control }
     * @return Control
     */
    public Control createControl() {
        return new Control();
    }

    /**
     * Create an instance of {@link CryptoKey }
     * @return CryptoKey
     */
    public CryptoKey createCryptoKey() {
        return new CryptoKey();
    }

    /**
     * Create an instance of {@link Properties }
     * @return Properties
     */
    public Properties createProperties() {
        return new Properties();
    }

    /**
     * Create an instance of {@link Global }
     * @return Global
     */
    public Global createGlobal() {
        return new Global();
    }

    /**
     * Create an instance of {@link Edges.Edge }
     * @return Edges.Edge
     */
    public Edges.Edge createEdgesEdge() {
        return new Edges.Edge();
    }

    /**
     * Create an instance of {@link Instance }
     * @return Instance
     */
    public Instance createInstance() {
        return new Instance();
    }

    /**
     * Create an instance of {@link Pools }
     * @return Pools
     */
    public Pools createPools() {
        return new Pools();
    }

    /**
     * Create an instance of {@link Parameter }
     * @return Parameter
     */
    public Parameter createParameter() {
        return new Parameter();
    }

    /**
     * Create an instance of {@link Vertex }
     * @return Vertex
     */
    public Vertex createVertex() {
        return new Vertex();
    }

    /**
     * Create an instance of {@link Map }
     * @return Map
     */
    public Map createMap() {
        return new Map();
    }

    /**
     * Create an instance of {@link Configuration }
     * @return Configuration
     */
    public Configuration createConfiguration() {
        return new Configuration();
    }

    /**
     * Create an instance of {@link Handler }
     * @return Handler
     */
    public Handler createHandler() {
        return new Handler();
    }

    /**
     * Create an instance of {@link Types }
     * @return Types
     */
    public Types createTypes() {
        return new Types();
    }

    /**
     * Create an instance of {@link SimpleParameter }
     * @return SimpleParameter
     */
    public SimpleParameter createSimpleParameter() {
        return new SimpleParameter();
    }

    /**
     * Create an instance of {@link Property }
     * @return Property
     */
    public Property createProperty() {
        return new Property();
    }

    /**
     * Create an instance of {@link Topology }
     * @return Topology
     */
    public Topology createTopology() {
        return new Topology();
    }

    /**
     * Create an instance of {@link Mapping }
     * @return Mapping
     */
    public Mapping createMapping() {
        return new Mapping();
    }

    /**
     * Create an instance of {@link Configuration.Actors }
     * @return Configuration.Actors
     */
    public Configuration.Actors createConfigurationActors() {
        return new Configuration.Actors();
    }

    /**
     * Create an instance of {@link Location }
     * @return Location
     */
    public Location createLocation() {
        return new Location();
    }

    /**
     * Create an instance of {@link SimpleParameters }
     * @return SimpleParameters
     */
    public SimpleParameters createSimpleParameters() {
        return new SimpleParameters();
    }

    /**
     * Create an instance of {@link Controls }
     * @return Controls
     */
    public Controls createControls() {
        return new Controls();
    }

    /**
     * Create an instance of {@link Edges }
     * @return Edges
     */
    public Edges createEdges() {
        return new Edges();
    }

    /**
     * Create an instance of {@link Actor }
     * @return Actor
     */
    public Actor createActor() {
        return new Actor();
    }

    /**
     * Create an instance of {@link Container }
     * @return Container
     */
    public Container createContainer() {
        return new Container();
    }

    /**
     * Create an instance of {@link Parameters }
     * @return Parameters 
     */
    public Parameters createParameters() {
        return new Parameters();
    }

    /**
     * Create an instance of {@link Rset }
     * @return Rset
     */
    public Rset createRset() {
        return new Rset();
    }

    /**
     * Create an instance of {@link Containers }
     * @return Containers
     */
    public Containers createContainers() {
        return new Containers();
    }

    /**
     * Create an instance of {@link Attribute }
     * @return Attribute
     */
    public Attribute createAttribute() {
        return new Attribute();
    }

    /**
     * Create an instance of {@link Pool }
     * @return Pool
     */
    public Pool createPool() {
        return new Pool();
    }

}
